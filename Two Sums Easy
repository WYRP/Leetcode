
V1

class Solution {
    public int[] twoSum(int[] nums, int target) {
    int[] output = new int[2];

    for(int i = 0; i<=nums.length-2; i++){
        for(int j = i+1; j<=nums.length-1; j++){
            if(target == nums[i] + nums[j]){
                output[0] = i;
                output[1] = j;
        
            }
        }
    }
    return output;
    }
}

V2
class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> numMap = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            int complement = target - nums[i];
            if (numMap.containsKey(complement)) {
                return new int[] {numMap.get(complement), i};
            }
            numMap.put(nums[i], i);
        }
        throw new IllegalArgumentException("No two sum solution");
    }
}
